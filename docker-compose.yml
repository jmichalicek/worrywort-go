version: '3'
services:
  database:
    image: "postgres:9.6.2"
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-developer}
        - POSTGRES_USER=${POSTGRES_USER:-developer}
        - POSTGRES_DB=${POSTGRES_DB:-bash_shell_net}
        - PGDATA=${PGDATA:-/var/lib/postgresql/data/pgdata}
    privileged: true
    volumes:
      - worrywort_db:/var/lib/postgresql/data
  redis:
    image: 'redis:latest'
    restart: on-failure
  worrywortd:
    image: worrywort-server:dev
    command: /bin/bash
    stdin_open: true
    tty: true
    depends_on:
      - database
      - redis
    working_dir: /go/src/github.com/jmichalicek/worrywort-server-go
    # command: /home/developer/docker_entrypoints/dev_entrypoint.sh
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DB_HOST: database
      DB_NAME: ${POSTGRES_DB:-worrywort}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-developer}
      DB_USER: ${POSTGRES_USER:-developer}
      REDIS_HOST: redis
    ports:
      - "8080:8080"  # May muck with port.  I do not really care, it was just on 8080 from initial sample I used as starting point.
    restart: on-failure
    volumes:
      - ${PWD}:/go/src/github.com/jmichalicek/worrywort-server-go/
volumes:
  worrywort_db:
